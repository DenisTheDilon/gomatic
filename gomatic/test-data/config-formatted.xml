<?xml version="1.0" ?>
<cruise schemaVersion="72" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd">
	<server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="590fc344-be24-4a80-aa6e-c4e3f05e8f41"/>
	<pipelines group="P.Group">
		<pipeline isLocked="false" labeltemplate="something-${COUNT}" name="typical">
			<environmentvariables>
				<variable name="JAVA_HOME">
					<value>/opt/java/jdk-1.8</value>
				</variable>
			</environmentvariables>
			<materials>
				<git url="git@bitbucket.org:springersbm/gomatic.git"/>
			</materials>
			<stage name="build">
				<jobs>
					<job name="compile">
						<environmentvariables>
							<variable name="CF_COLOR">
								<value>false</value>
							</variable>
						</environmentvariables>
						<tasks>
							<exec command="make">
								<arg>options</arg>
								<arg>source code</arg>
							</exec>
						</tasks>
						<tabs>
							<tab name="Time_Taken" path="artifacts/test-run-times.html"/>
						</tabs>
						<resources>
							<resource>a-resource</resource>
						</resources>
					</job>
				</jobs>
			</stage>
			<stage name="deploy">
				<approval type="manual"/>
				<environmentvariables>
					<variable name="BASE_URL">
						<value>http://myurl</value>
					</variable>
				</environmentvariables>
				<jobs>
					<job name="upload" timeout="20">
						<tasks>
							<exec command="curl">
								<arg>POST</arg>
								<arg>http://myurl</arg>
								<runif status="passed"/>
							</exec>
						</tasks>
					</job>
				</jobs>
			</stage>
		</pipeline>
		<pipeline name="more-options">
			<params>
				<param name="environment">qa</param>
			</params>
			<timer>0 15 22 * * ?</timer>
			<environmentvariables>
				<variable name="JAVA_HOME">
					<value>/opt/java/jdk-1.7</value>
				</variable>
				<variable name="MY_USERNAME" secure="true">
					<encryptedValue>ls6AMEyDqlE=</encryptedValue>
				</variable>
				<variable name="MY_PASSWORD" secure="true">
					<encryptedValue>rZlyug1gxy4=</encryptedValue>
				</variable>
			</environmentvariables>
			<materials>
				<git autoUpdate="false" branch="a-branch" materialName="some-material-name" url="git@bitbucket.org:springersbm/gomatic.git"/>
				<pipeline pipelineName="deploy.fig-env" stageName="update-docker-containers"/>
			</materials>
			<stage name="earlyStage">
				<jobs>
					<job name="earlyWorm" runOnAllAgents="true">
						<tasks>
							<exec command="ls"/>
							<exec command="bash">
								<arg>-c</arg>
								<arg>curl &quot;http://domain.com/service/check?target=one+two+three&amp;key=2714_beta%40domain.com&quot;</arg>
								<runif status="passed"/>
							</exec>
						</tasks>
						<artifacts>
							<artifact dest="artifacts" src="target/universal/myapp*.zip"/>
							<artifact dest="files" src="scripts/*"/>
							<test dest="to" src="from"/>
						</artifacts>
					</job>
				</jobs>
			</stage>
			<stage fetchMaterials="false" name="s1">
				<jobs>
					<job name="rake-job">
						<tasks>
							<rake target="boo">
								<runif status="passed"/>
							</rake>
						</tasks>
						<artifacts>
							<artifact src="things/*"/>
						</artifacts>
					</job>
					<job name="run-if-variants">
						<tasks>
							<exec command="t-passed">
								<runif status="passed"/>
							</exec>
							<exec command="t-none"/>
							<exec command="t-failed">
								<runif status="failed"/>
							</exec>
							<exec command="t-any">
								<runif status="any"/>
							</exec>
							<exec command="t-both">
								<runif status="failed"/>
								<runif status="passed"/>
							</exec>
						</tasks>
					</job>
					<job name="variety-of-tasks">
						<tasks>
							<rake target="sometarget">
								<runif status="passed"/>
							</rake>
							<fetchartifact dest="destDir" job="earlyWorm" pipeline="firstPipeline" srcdir="sourceDir" stage="earlyStage">
								<runif status="passed"/>
							</fetchartifact>
							<fetchartifact job="build" pipeline="anotherPipeline" srcfile="someFile" stage="build">
								<runif status="passed"/>
							</fetchartifact>
							<exec command="true"/>
						</tasks>
					</job>
				</jobs>
			</stage>
		</pipeline>
	</pipelines>
</cruise>